{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rahul\\\\Desktop\\\\react\\\\challengem\\\\src\\\\Cart.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Cart() {\n  _s();\n\n  const {\n    isEmpty,\n    totalUniqueItems,\n    items,\n    updateItemQuantity,\n    removeItem\n  } = useCart();\n  if (isEmpty) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Your cart is empty\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 25\n  }, this);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Cart (\", totalUniqueItems, \")\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: items.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [item.quantity, \" x \", item.name, \" \\u2014\", /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => updateItemQuantity(item.id, item.quantity - 1),\n          children: \"-\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => updateItemQuantity(item.id, item.quantity + 1),\n          children: \"+\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => removeItem(item.id),\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 15\n        }, this)]\n      }, item.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Cart, \"it+LIh3hyuKLI+uKhzfrHojhlhY=\", true);\n\n_c = Cart;\n\nvar _c;\n\n$RefreshReg$(_c, \"Cart\");","map":{"version":3,"sources":["C:/Users/Rahul/Desktop/react/challengem/src/Cart.js"],"names":["React","Cart","isEmpty","totalUniqueItems","items","updateItemQuantity","removeItem","useCart","map","item","quantity","name","id"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;AACA,SAASC,IAAT,GAAgB;AAAA;;AACZ,QAAM;AACJC,IAAAA,OADI;AAEJC,IAAAA,gBAFI;AAGJC,IAAAA,KAHI;AAIJC,IAAAA,kBAJI;AAKJC,IAAAA;AALI,MAMFC,OAAO,EANX;AAQA,MAAIL,OAAJ,EAAa,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAEb,sBACE;AAAA,4BACE;AAAA,2BAAWC,gBAAX;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAGE;AAAA,gBACGC,KAAK,CAACI,GAAN,CAAWC,IAAD,iBACT;AAAA,mBACGA,IAAI,CAACC,QADR,SACqBD,IAAI,CAACE,IAD1B,0BAEE;AACE,UAAA,OAAO,EAAE,MAAMN,kBAAkB,CAACI,IAAI,CAACG,EAAN,EAAUH,IAAI,CAACC,QAAL,GAAgB,CAA1B,CADnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,eAOE;AACE,UAAA,OAAO,EAAE,MAAML,kBAAkB,CAACI,IAAI,CAACG,EAAN,EAAUH,IAAI,CAACC,QAAL,GAAgB,CAA1B,CADnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPF,eAYE;AAAQ,UAAA,OAAO,EAAE,MAAMJ,UAAU,CAACG,IAAI,CAACG,EAAN,CAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAZF;AAAA,SAASH,IAAI,CAACG,EAAd;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA,kBADF;AAwBD;;GAnCMX,I;;KAAAA,I","sourcesContent":["import React from \"react\";\r\nfunction Cart() {\r\n    const {\r\n      isEmpty,\r\n      totalUniqueItems,\r\n      items,\r\n      updateItemQuantity,\r\n      removeItem,\r\n    } = useCart();\r\n  \r\n    if (isEmpty) return <p>Your cart is empty</p>;\r\n  \r\n    return (\r\n      <>\r\n        <h1>Cart ({totalUniqueItems})</h1>\r\n  \r\n        <ul>\r\n          {items.map((item) => (\r\n            <li key={item.id}>\r\n              {item.quantity} x {item.name} &mdash;\r\n              <button\r\n                onClick={() => updateItemQuantity(item.id, item.quantity - 1)}\r\n              >\r\n                -\r\n              </button>\r\n              <button\r\n                onClick={() => updateItemQuantity(item.id, item.quantity + 1)}\r\n              >\r\n                +\r\n              </button>\r\n              <button onClick={() => removeItem(item.id)}>&times;</button>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </>\r\n    );\r\n  }\r\n  "]},"metadata":{},"sourceType":"module"}