{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rahul\\\\Desktop\\\\react\\\\challengem\\\\src\\\\Cart.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useCart } from 'react-use-cart';\nimport Button from '@material-ui/core/Button';\nimport AddIcon from '@material-ui/icons/Add';\nimport RemoveIcon from '@material-ui/icons/Remove';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst style = {\n  height: \"60px\"\n};\n\nconst Cart = () => {\n  _s();\n\n  let {\n    isEmpty,\n    totalUniqueItems,\n    items,\n    totalItems,\n    cartTotal,\n    updateItemQuantity,\n    removeItem,\n    emptyCart\n  } = useCart();\n  if (isEmpty) return /*#__PURE__*/_jsxDEV(\"p\", {\n    className: \"text-center\",\n    children: \"This Cart Is Empty\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 24\n  }, this);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Your Total Item Is \", totalUniqueItems]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      class: \"table\",\n      children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: items.map(itemsData => {\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: itemsData.image,\n                alt: \"random img\",\n                width: \"100\",\n                height: \"100\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 24,\n                columnNumber: 31\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 24,\n              columnNumber: 27\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [\"name \", itemsData.name]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 25,\n              columnNumber: 27\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [\"price rs.\", itemsData.price]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 26,\n              columnNumber: 27\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [\" Quantity \", itemsData.quantity]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 27,\n              columnNumber: 27\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                color: \"primary\",\n                children: [\" \", /*#__PURE__*/_jsxDEV(RemoveIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 29,\n                  columnNumber: 72\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 29,\n                columnNumber: 27\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                style: {\n                  marginLeft: \"10px\"\n                },\n                onClick: () => {\n                  updateItemQuantity(itemsData.id, itemsData.quantity + 1);\n                },\n                children: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 30,\n                  columnNumber: 154\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 30,\n                columnNumber: 27\n              }, this), \"\\xA0\\xA0\", /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                color: \"error\",\n                onClick: () => {\n                  removeItem(itemsData.id);\n                },\n                children: \"Remove Item\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 31,\n                columnNumber: 27\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 27\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 25\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Cart, \"kfu/wmHrXX2qT03KDHOukUu9174=\", false, function () {\n  return [useCart];\n});\n\n_c = Cart;\nexport default Cart;\n\nvar _c;\n\n$RefreshReg$(_c, \"Cart\");","map":{"version":3,"sources":["C:/Users/Rahul/Desktop/react/challengem/src/Cart.js"],"names":["React","useCart","Button","AddIcon","RemoveIcon","style","height","Cart","isEmpty","totalUniqueItems","items","totalItems","cartTotal","updateItemQuantity","removeItem","emptyCart","map","itemsData","image","name","price","quantity","marginLeft","id"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,gBAAtB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,OAAP,MAAoB,wBAApB;AACA,OAAOC,UAAP,MAAuB,2BAAvB;;;AAEA,MAAMC,KAAK,GAAG;AACZC,EAAAA,MAAM,EAAC;AADK,CAAd;;AAGA,MAAMC,IAAI,GAAG,MAAM;AAAA;;AACf,MAAI;AAACC,IAAAA,OAAD;AAASC,IAAAA,gBAAT;AAA0BC,IAAAA,KAA1B;AAAgCC,IAAAA,UAAhC;AAA2CC,IAAAA,SAA3C;AAAqDC,IAAAA,kBAArD;AAAwEC,IAAAA,UAAxE;AAAmFC,IAAAA;AAAnF,MAAgGd,OAAO,EAA3G;AACA,MAAGO,OAAH,EAAY,oBAAO;AAAG,IAAA,SAAS,EAAC,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACZ,sBACI;AAAA,4BACE;AAAA,wCAAuBC,gBAAvB;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAGE;AAAO,MAAA,KAAK,EAAC,OAAb;AAAA,6BACM;AAAA,kBAEGC,KAAK,CAACM,GAAN,CAAWC,SAAD,IAAa;AACpB,8BACE;AAAA,oCAEE;AAAA,qCAAI;AAAK,gBAAA,GAAG,EAAEA,SAAS,CAACC,KAApB;AAA2B,gBAAA,GAAG,EAAC,YAA/B;AAA4C,gBAAA,KAAK,EAAC,KAAlD;AAAwD,gBAAA,MAAM,EAAC;AAA/D;AAAA;AAAA;AAAA;AAAA;AAAJ;AAAA;AAAA;AAAA;AAAA,oBAFF,eAGE;AAAA,kCAAUD,SAAS,CAACE,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHF,eAIE;AAAA,sCAAcF,SAAS,CAACG,KAAxB;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJF,eAKE;AAAA,uCAAeH,SAAS,CAACI,QAAzB;AAAA;AAAA;AAAA;AAAA;AAAA,oBALF,eAME;AAAA,sCACA,QAAC,MAAD;AAAQ,gBAAA,OAAO,EAAC,WAAhB;AAA4B,gBAAA,KAAK,EAAC,SAAlC;AAAA,6CAA6C,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,wBAA7C;AAAA;AAAA;AAAA;AAAA;AAAA,sBADA,eAEA,QAAC,MAAD;AAAQ,gBAAA,OAAO,EAAC,WAAhB;AAA4B,gBAAA,KAAK,EAAE;AAACC,kBAAAA,UAAU,EAAC;AAAZ,iBAAnC;AAAwD,gBAAA,OAAO,EAAE,MAAI;AAACT,kBAAAA,kBAAkB,CAACI,SAAS,CAACM,EAAX,EAAeN,SAAS,CAACI,QAAV,GAAmB,CAAlC,CAAlB;AAAuD,iBAA7H;AAAA,uCAA+H,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAA/H;AAAA;AAAA;AAAA;AAAA,sBAFA,2BAGA,QAAC,MAAD;AAAQ,gBAAA,OAAO,EAAC,WAAhB;AAA4B,gBAAA,KAAK,EAAC,OAAlC;AAA0C,gBAAA,OAAO,EAAE,MAAI;AAACP,kBAAAA,UAAU,CAACG,SAAS,CAACM,EAAX,CAAV;AAAyB,iBAAjF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAHA;AAAA;AAAA;AAAA;AAAA;AAAA,oBANF;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF;AAcF,SAfD;AAFH;AAAA;AAAA;AAAA;AAAA;AADN;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA,kBADJ;AA4BH,CA/BD;;GAAMhB,I;UACkGN,O;;;KADlGM,I;AAiCN,eAAeA,IAAf","sourcesContent":["import React from 'react'\r\nimport {useCart} from 'react-use-cart';\r\nimport Button from '@material-ui/core/Button';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport RemoveIcon from '@material-ui/icons/Remove';\r\n\r\nconst style = {\r\n  height:\"60px\"\r\n}\r\nconst Cart = () => {\r\n    let {isEmpty,totalUniqueItems,items,totalItems,cartTotal,updateItemQuantity,removeItem,emptyCart} = useCart();\r\n    if(isEmpty) return <p className=\"text-center\">This Cart Is Empty</p>\r\n    return (\r\n        <>\r\n          <p>Your Total Item Is {totalUniqueItems}</p>  \r\n         \r\n          <table class=\"table\">\r\n                <tbody>\r\n                 {\r\n                   items.map((itemsData)=>{\r\n                      return(\r\n                        <tr>\r\n                         \r\n                          <td><img src={itemsData.image} alt=\"random img\" width=\"100\" height=\"100\"/></td>\r\n                          <td>name {itemsData.name}</td>\r\n                          <td>price rs.{itemsData.price}</td>\r\n                          <td> Quantity {itemsData.quantity}</td>\r\n                          <td>\r\n                          <Button variant=\"contained\" color=\"primary\"> <RemoveIcon/></Button>\r\n                          <Button variant=\"contained\" style={{marginLeft:\"10px\"}} onClick={()=>{updateItemQuantity(itemsData.id, itemsData.quantity+1)}}><AddIcon  /></Button>&nbsp;&nbsp;\r\n                          <Button variant=\"contained\" color=\"error\" onClick={()=>{removeItem(itemsData.id)}}>Remove Item</Button>\r\n                          </td>\r\n                        </tr>\r\n                      )\r\n                   })\r\n                 }                  \r\n                </tbody>\r\n           </table>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Cart;\r\n"]},"metadata":{},"sourceType":"module"}